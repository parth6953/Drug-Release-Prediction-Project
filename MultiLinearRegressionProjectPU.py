# -*- coding: utf-8 -*-

"""MultiLinearRegressionProjectPU

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j-ApzRO9rzb5m0X_F6_Lfv0Qn-j67Af-
"""

#Importing libraries numpy and pandas.
import numpy as np
import pandas as pd

# Using pandas library we import our required dataset.
df = pd.read_csv ('data_for_Ann_model.csv')
print (df)
df.head()

# Full summary of our dataframe.

df.info()

# Description of our data in the DataFrame.
df.describe()

# Mean of floating lag time(sec)
mean = df['Hardness'].mean(skipna=True)
print("Mean  of Hardness : ",mean)

# Mean of floating lag time(sec)
mean = df['floating lag time(sec)'].mean(skipna=True)
print("Mean  of floating lag time(sec) : ",mean)

# Mean of Drug release(%)
mean = df['Drug release(%)'].mean(skipna=True)
print("Mean of Drug release(%) : ",mean)

# Minimum of Hardness
min = df['Hardness'].min(skipna=True)
print("Minimum of Hardness : ",min)

# Minimum of floating lag time(sec)
min = df['floating lag time(sec)'].min(skipna=True)
print("Minimum of floating lag time(sec) : ",min)

# Minimum of Drug release(%)
min = df['Drug release(%)'].min(skipna=True)
print("Minimum of Drug release(%) : ",min)

# Maximum of Hardness
max = df['Hardness'].max(skipna=True)
print("Maximum of Hardness : ",max)

# Maximum of floating lag time(sec)
max = df['floating lag time(sec)'].max(skipna=True)
print("Maximum of floating lag time(sec) : ",max)

# Maximum of Drug release(%)
max = df['Drug release(%)'].max(skipna=True)
print("Maximum of Drug release(%) : ",max)

# Defining Variables X and y.
X = df[['BCS class','Hardness']]
y = df[['floating lag time(sec)','Drug release(%)']]

# creating train and test sets
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)

#Using Multilinear Regression
from sklearn.linear_model import LinearRegression  
regressor= LinearRegression()  
regressor.fit(X_train, y_train)

# creating a regression model
model = LinearRegression()
# fitting the model
model.fit(X_train,y_train)
# making predictions
predictions = model.predict(X_test)

# Training and Testing score.
print('Training Score: ', regressor.score(X_train, y_train))  
print('Testing Score: ', regressor.score(X_test, y_test))

# Predicting the Test
y_pred= regressor.predict(X_test) 
y_pred

# Predicting our required variables i.e floating lag time(sec) & Drug release(%) from BCS class and Hardness
predictedDrugrelease = regressor.predict([[2,2.5]])
print("[floating lag time(sec),Drug release(%)] : ",predictedDrugrelease)

#Ploting the Results
import matplotlib.pyplot as plt
plt.scatter(y_test,y_pred);
plt.xlabel('A (BCS class,Hardness)');
plt.ylabel('B (floating lag time(sec),Drug release(%))');

